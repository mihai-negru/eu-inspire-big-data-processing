#!/usr/bin/env bash

sudo brew services start socket_vmnet

minikube config set cpus 10
minikube config set memory 24576
minikube config set disk-size 200g

minikube start --driver=qemu --network=socket_vmnet #--cni=calico
#sudo minikube tunnel > /dev/null 2>&1 < /dev/null &

kubectl apply -f config/namespaces.yaml --server-side

for namespace in $(kubectl get namespaces -o jsonpath='{range .items[*]}{.metadata.name}{" "}'); do
    kubectl create secret docker-registry ghcr-secret                                                   \
        --namespace="$namespace"                                                                        \
        --docker-server=ghcr.io                                                                         \
        --docker-username="$GITHUB_REGISTRY_USERNAME" --docker-password="$GITHUB_REGISTRY_PASSWORD"     \
        --docker-email="$GITHUB_REGISTRY_EMAIL"                                                         \
        --dry-run=client -o yaml | kubectl apply -f -
done

# PROMETHEUS
kubectl apply -f prometheus/secret.yaml
helm upgrade --install kube-prometheus-stack prometheus-community/kube-prometheus-stack                 \
    --namespace=monitoring                                                                              \
    --values prometheus/values.yaml

# KAFKA
helm install kafka bitnami/kafka --namespace kafka --values kafka/values.yaml

# CASSANDRA
kubectl create configmap cassandra-init-cql --namespace cassandra --from-file=cassandra/init.cql
kubectl create secret generic cassandra-secret --namespace cassandra --from-env-file=cassandra/.env
helm install cassandra bitnami/cassandra --namespace cassandra --values cassandra/values.yaml

# FLINK OPERATOR
helm install flink-kubernetes-operator flink-operator-repo/flink-kubernetes-operator --namespace flink --values flink/values.yaml

printf "Waiting for 5s...\n"
sleep 5

# WAIT FOR KAFKA & CASSANDRA & FLINK OPERATOR
kubectl rollout status statefulset/kafka-controller --namespace kafka
kubectl rollout status statefulset/cassandra --namespace cassandra
kubectl rollout status deployment/flink-kubernetes-operator -n flink

# INSPIRE VALIDATOR
kustomize build ./inspire-reference-validator | kubectl apply -f -

# FLINK
kubectl create secret generic flink-secret --namespace flink --from-env-file=flink/.env
kubectl create configmap flink-test-strategy --namespace flink --from-file=flink/flink-test-strategy.yaml
kubectl apply -f flink/flink-application.yaml

printf "Waiting for 5s...\n"
sleep 5

# WAIT FOR VALIDATOR AND FLINK JOB
kubectl rollout status deployment/connector -n inspire-validator
kubectl rollout status deployment/validator -n inspire-validator
kubectl rollout status deployment/flink-inspire -n flink

kubectl port-forward svc/flink-inspire-rest 8081:8081 -n flink > /dev/null 2>&1 < /dev/null &
kubectl port-forward svc/validator 8082:8080 -n inspire-validator > /dev/null 2>&1 < /dev/null &
kubectl port-forward svc/kube-prometheus-stack-grafana 8083:80 -n monitoring > /dev/null 2>&1 < /dev/null &